name: Laravel

on:
 push:
   branches: [ "main" ]
 pull_request:
   branches: [ "main" ]
 workflow_dispatch:
jobs:
 build:
   runs-on: ubuntu-latest

   steps:
   # Fa un git clone de la branca que ha generat l'acció a la màquina ubuntu
   - uses: actions/checkout@v4
   # Instal·la el php
   - uses: shivammathur/setup-php@v2
     with:
       php-version: '8.4'
       extensions: curl, mbstring, pdo_mysql, tokenizer, xml, zip, zlib, ctype, openssl, fileinfo, bcmath
   # Fa un git clone de la branca que ha generat l'acció a la màquina ubuntu
   - uses: actions/checkout@v4
   # Instal·la les dependències de php
   - name: Install Dependencies
     run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
   # Instal·la el Node JS
   - name: Node JS 
     uses: actions/setup-node@v4
     with:
       node-version: 20
   # Instal·la les dependències Node.js
   - name: Instal·la les dependències de Node JS
     run: npm install
   # Compila el Vue
   - name: Compila vue.js
     run: npm run build
   - name: Fent neteja
     run: rm -rf node_modules
   - name: Esborrar la carpeta storage
     run: rm -rf storage
   - name: Comprimir el projecte  (incloent els ocults)
     run: tar -czf app.tgz $(ls -A)
   - name: ssh scp ssh pipelines
     uses: cross-the-world/ssh-scp-ssh-pipelines@latest
     env:
       WELCOME: "ssh scp ssh pipelines"
       LASTSSH: "Doing something after copying"
     with:
       host: ${{ secrets.SSH_HOST }}
       user: ${{ secrets.SSH_USER }}
       pass: ${{ secrets.SSH_PASS }}
       port: ${{ secrets.SSH_PORT }}
       connect_timeout: 10s
       first_ssh: | 
         ls -la  
         echo $WELCOME
       scp: |
         './app.tgz' => ${{ secrets.DOCUMENT_ROOT }}
       last_ssh: |
         echo $LASTSSH
         cd ${{ secrets.DOCUMENT_ROOT }}
         tar -xzf app.tgz
         pwd
         ls -lisa
         echo "Copiar el fitxer env si no el tenim"
         $(which php84) -r "file_exists('.env') || copy('.env.example', '.env');"
         echo "Canvia el fitxer env"
         sed -i "s/DB_CONNECTION=mysql/DB_CONNECTION=${{ secrets.DB_CONNECTION }}/g" .env
         $(which php84) artisan config:clear